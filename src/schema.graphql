### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Address {
  city: String!
  country: String!
  formattedAddress: String!
  state: String!
  street: String!
  streetNumber: String!
  timeZone: String!
  zipCode: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type Coords {
  latitude: Float!
  longitude: Float!
}

type Court {
  address: Address!
  coords: Coords!
  id: String!
  name: String!
  numberOfCourts: String!
  phone: String!
  type: [CourtType!]!
}

enum CourtType {
  Indoor
  Outdoor
}

"""Required input for creating a session"""
input CreateSessionInput {
  courtId: ID!
  end: DateTime!
  start: DateTime!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Input for logging in a user"""
input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  login(input: LoginInput!): AuthPayload!
  signup(input: SignUpInput!): AuthPayload!
}

scalar Password

type Query {
  courts: [Court!]!
  sessions: [Session!]!
}

type Session {
  attending: [User!]!
  coords: Coords!
  court: Court!
  createdBy: User!
  date: String!
  end: DateTime!
  id: String!
  numberAttending: Int!
  start: DateTime!
  times: String!
  timeZone: String!
}

"""Input type for signing up a user"""
input SignUpInput {
  avatar: Upload
  confirmPassword: Password!
  fullName: String!
  password: Password!
  username: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatarUrl: String
  fullName: String!
  id: String!
  username: String!
}
